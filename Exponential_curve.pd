#N canvas 235 24 918 495 10;
#N canvas 0 22 450 278 (subpatch) 0;
#X array exponential 1000 float 2;
#X coords 0 1000 999 0 200 140 1 0 0;
#X restore 540 194 graph;
#X obj 45 201 until;
#X obj 45 256 f;
#X obj 71 256 + 1;
#X obj 45 362 t b f;
#X obj 45 418 pow;
#X obj 148 373 /;
#X obj 45 390 f;
#X obj 45 440 *;
#X obj 45 278 t f f;
#X floatatom 142 145 5 0 0 2 start - -;
#X floatatom 45 145 5 0 0 2 end - -;
#X obj 148 350 pack;
#X obj 142 166 t f f;
#X msg 60 235 0;
#X text 98 255 incrementing variable i;
#X text 174 362 end/start (to be raised to the i/N power);
#X text 70 416 end/start raised to the i/N power;
#X text 120 79 i < N \;;
#X text 161 79 i++);
#X floatatom 540 387 7 0 0 0 - - -;
#X floatatom 540 344 5 0 0 0 - - -;
#X text 659 363 retrieve values from table;
#X obj 45 166 t f b f f;
#X obj 45 310 /;
#X obj 45 462 tabwrite exponential;
#X text 72 95 exponential[i] = start*pow(end/start \, (double)i/N)
\;;
#X obj 540 365 tabread exponential;
#N canvas 362 70 631 528 check-gliss 0;
#X obj 113 258 line 0 5;
#X obj 113 318 osc~;
#X obj 113 428 dac~;
#N canvas 0 22 450 278 (subpatch) 0;
#X array linear 1000 float 2;
#X coords 0 1000 999 0 200 140 1 0 0;
#X restore 371 24 graph;
#X obj 371 266 t f b;
#X obj 371 288 until;
#X obj 371 331 f;
#X obj 397 331 + 1;
#X msg 386 310 0;
#X obj 371 353 t f f;
#X obj 371 380 tabwrite linear;
#X msg 177 107 set linear;
#X obj 42 9 vradio 15 1 0 2 empty empty empty 0 -8 0 10 -262144 -1
-1 1;
#X text 60 8 exponential;
#X text 60 23 linear;
#X obj 42 69 sel 0 1;
#X obj 42 155 t b b;
#X obj 42 197 f;
#X obj 80 132 2000;
#X obj 113 398 *~;
#X obj 113 288 tabread;
#X msg 176 172 set exponential;
#X obj 42 219 t b f;
#X msg 42 268 0;
#X obj 42 44 t f b;
#X msg 128 61 1;
#X obj 61 90 t b b b;
#X obj 57 176 r exp_size;
#X obj 113 457 cnv 15 150 40 empty empty empty 20 12 0 14 -232717 -66577
0;
#N canvas 79 105 387 460 trick_to_use_linear 0;
#X obj 77 310 osc~;
#X obj 77 414 dac~;
#X msg 60 7 bang;
#X obj 77 382 *~;
#X obj 77 195 line 0 5;
#X obj 77 217 tabread linear;
#X obj 77 239 / 2000;
#X obj 77 261 pow 4;
#X obj 77 283 * 2000;
#X obj 60 94 t b f f f;
#X msg 60 142 0;
#X obj 60 29 t b b;
#X msg 197 46 1;
#X text 123 237 make range from 0 to 1;
#X text 116 258 raise to a power (preferably the 4th);
#X text 121 282 scale it again from 0 to table size;
#X obj 60 72 2000;
#X obj 92 336 pack f 20;
#X obj 92 358 line~;
#X obj 81 50 r exp_size;
#X msg 77 170 0 \, \$1 10000;
#X obj 60 120 del 12000;
#X connect 0 0 3 0;
#X connect 2 0 11 0;
#X connect 3 0 1 0;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 0 0;
#X connect 9 0 21 0;
#X connect 9 1 20 0;
#X connect 9 2 6 1;
#X connect 9 3 8 1;
#X connect 10 0 17 0;
#X connect 11 0 16 0;
#X connect 11 1 12 0;
#X connect 12 0 17 0;
#X connect 16 0 9 0;
#X connect 17 0 18 0;
#X connect 18 0 3 1;
#X connect 19 0 16 1;
#X connect 20 0 4 0;
#X connect 21 0 10 0;
#X restore 120 474 pd trick_to_use_linear;
#X text 122 457 click here;
#X obj 128 351 pack f 20;
#X obj 128 373 line~;
#X obj 371 216 r exp_size;
#N canvas 584 121 348 483 resize_table 0;
#X obj 100 136 t f f;
#X obj 127 159 - 1;
#X obj 100 180 pack;
#X msg 117 114 resize \$1;
#X obj 66 13 inlet;
#X obj 66 409 outlet;
#X msg 83 385 ylabel \$1 0 \$2;
#X obj 83 255 t f f;
#X obj 83 321 pack;
#X obj 83 277 / 10;
#X obj 83 299 * -1;
#X msg 138 360 xlabel \$1 \$2;
#X obj 83 343 t l l;
#X msg 100 204 bounds 0 \$1 \$2 0;
#X obj 117 230 s linear;
#X obj 66 74 t f f f f;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 13 0;
#X connect 3 0 14 0;
#X connect 4 0 15 0;
#X connect 6 0 14 0;
#X connect 7 0 9 0;
#X connect 7 1 8 1;
#X connect 8 0 12 0;
#X connect 9 0 10 0;
#X connect 10 0 8 0;
#X connect 11 0 14 0;
#X connect 12 0 6 0;
#X connect 12 1 11 0;
#X connect 13 0 14 0;
#X connect 15 0 5 0;
#X connect 15 1 7 0;
#X connect 15 2 0 0;
#X connect 15 3 3 0;
#X restore 371 239 pd resize_table;
#X obj 128 83 t f f;
#X msg 251 100 dsp \$1;
#X obj 251 122 s pd;
#X obj 42 246 del 12000;
#X msg 113 236 0 \, \$1 10000;
#X obj 101 110 r exp_size;
#X connect 0 0 20 0;
#X connect 1 0 19 0;
#X connect 4 0 5 0;
#X connect 4 1 8 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 9 0;
#X connect 7 0 6 1;
#X connect 8 0 6 1;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 11 0 20 0;
#X connect 12 0 24 0;
#X connect 15 0 16 0;
#X connect 15 1 26 0;
#X connect 16 0 17 0;
#X connect 16 1 21 0;
#X connect 17 0 22 0;
#X connect 18 0 39 0;
#X connect 19 0 2 0;
#X connect 19 0 2 1;
#X connect 20 0 1 0;
#X connect 21 0 20 0;
#X connect 22 0 38 0;
#X connect 22 1 39 0;
#X connect 23 0 31 0;
#X connect 24 0 15 0;
#X connect 24 1 25 0;
#X connect 25 0 35 0;
#X connect 26 0 38 0;
#X connect 26 1 18 0;
#X connect 26 2 11 0;
#X connect 27 0 17 1;
#X connect 31 0 32 0;
#X connect 32 0 19 1;
#X connect 33 0 34 0;
#X connect 34 0 4 0;
#X connect 35 0 31 0;
#X connect 35 1 36 0;
#X connect 36 0 37 0;
#X connect 38 0 23 0;
#X connect 39 0 0 0;
#X connect 40 0 18 1;
#X restore 545 108 pd check-gliss;
#X text 69 310 This is the incrementing power i/N (N = table size)
;
#N canvas 550 196 441 478 resize_table 0;
#X obj 97 136 t f f;
#X obj 124 159 - 1;
#X obj 97 180 pack;
#X msg 113 114 resize \$1;
#X obj 113 230 s exponential;
#X obj 154 91 s exp_size;
#X obj 66 13 inlet;
#X obj 66 409 outlet;
#X obj 66 74 t f f f f f;
#X msg 81 385 ylabel \$1 0 \$2;
#X obj 81 255 t f f;
#X obj 81 321 pack;
#X obj 81 277 / 10;
#X obj 81 299 * -1;
#X msg 138 360 xlabel \$1 \$2;
#X obj 81 343 t l l;
#X msg 97 204 bounds 0 \$1 \$2 0;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 16 0;
#X connect 3 0 4 0;
#X connect 6 0 8 0;
#X connect 8 0 7 0;
#X connect 8 1 10 0;
#X connect 8 2 0 0;
#X connect 8 3 3 0;
#X connect 8 4 5 0;
#X connect 9 0 4 0;
#X connect 10 0 12 0;
#X connect 10 1 11 1;
#X connect 11 0 15 0;
#X connect 12 0 13 0;
#X connect 13 0 11 0;
#X connect 14 0 4 0;
#X connect 15 0 9 0;
#X connect 15 1 14 0;
#X connect 16 0 4 0;
#X restore 96 201 pd resize_table;
#X text 43 9 'start' is the first value of the array and should be
greater than zero. 'end' is the length of the array. First set the
'start' value and then the 'end' value.;
#X text 43 65 C code:;
#X text 42 79 for(int i=0 \;;
#X text 547 9 The subpatch below demonstrates the difference between
an exponential curve and a straight line \, using the tables for a
frequency sweep. In the case of the exponential curve \, the glissando
of the oscillator is much more stable than the linear one \, where
in the case of the latter \, the glissando in low frequencies is much
faster than in high frequencies.;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 9 0;
#X connect 3 0 2 1;
#X connect 4 0 7 0;
#X connect 4 1 5 1;
#X connect 5 0 8 0;
#X connect 6 0 7 1;
#X connect 7 0 5 0;
#X connect 8 0 25 0;
#X connect 9 0 24 0;
#X connect 9 1 25 1;
#X connect 10 0 13 0;
#X connect 11 0 23 0;
#X connect 12 0 6 0;
#X connect 13 0 8 1;
#X connect 13 1 12 1;
#X connect 14 0 2 1;
#X connect 21 0 27 0;
#X connect 23 0 1 0;
#X connect 23 1 14 0;
#X connect 23 2 12 0;
#X connect 23 3 30 0;
#X connect 24 0 4 0;
#X connect 27 0 20 0;
#X connect 30 0 24 1;
